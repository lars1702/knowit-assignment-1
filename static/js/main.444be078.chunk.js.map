{"version":3,"sources":["components.js","Buttons.js","usePaginator.js","App.js","index.js"],"names":["AppContainer","styled","div","Table","table","TableData","td","p","header","HeaderRow","BodyRow","index","repo","name","homepage","href","watchers","description","H1","h1","Loading","loaded","useState","numDots","setNumDots","useEffect","id","setInterval","clearInterval","repeat","Button","button","ButtonContainer","Buttons","curPage","totalPages","setPage","console","log","pagesArray","Array","fill","onClick","map","e","key","usePaginator","initalState","page","input","Number","isNaN","KnowitApp","rawResults","setRawResults","setTotalPages","fetch","then","data","json","res","items","Math","floor","length","pageResults","useMemo","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.444be078.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\"\nimport React, { useState, useEffect } from \"react\"\n\n// table styling\n// https://codepen.io/Lars1702/pen/PoZKNbz\n\nexport const AppContainer = styled.div`\n  position: relative;\n\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  ::before {\n    content: \"\";\n    pointer-events: none;\n    position: fixed;\n    background: #293241;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    z-index: 1;\n  }\n  * {\n    z-index: 2;\n  }\n`\n\n//- Table stuff -//\n\nexport const Table = styled.table`\n  border-spacing: 0;\n  margin: 0 auto;\n  margin: 5px;\n  thead {\n    background-color: #3d5a80;\n    color: white;\n  }\n  th {\n    height: 70px;\n    font-weight: 500;\n    padding: 0px 50px;\n    max-width: 500px;\n    font-size: 22px;\n  }\n  tbody tr {\n    height: 40px;\n    &:nth-child(even) {\n      background-color: #98c1d9;\n    }\n    &:nth-child(odd) {\n      background-color: #e0fbfc;\n    }\n  }\n  tr:last-child {\n    td:first-child {\n      border-bottom-left-radius: 10px;\n    }\n    td:last-child {\n      border-bottom-right-radius: 10px;\n    }\n  }\n  th:first-child {\n    border-top-left-radius: 10px;\n  }\n  th:last-child {\n    border-top-right-radius: 10px;\n  }\n  @media (max-width: 760px),\n    (min-device-width: 768px) and (max-device-width: 1024px) {\n    &,\n    thead,\n    tbody,\n    th,\n    tr,\n    tbody tr {\n      max-width: unset;\n      padding: unset;\n      height: unset;\n      display: block;\n    }\n\n    thead tr {\n      position: absolute;\n      top: -9999px;\n      left: -9999px;\n    }\n    tbody {\n      max-width: 100%;\n    }\n    tbody tr {\n      margin: 15px 0px;\n    }\n  }\n`\n\nexport const TableData = styled.td`\n  font-weight: 400;\n  padding: 10px;\n  max-width: 500px;\n  word-break: break-word;\n  @media (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {\n    max-width: unset;\n    height: unset;\n    display: block;\n    padding: 6px;\n    position: relative;\n    padding-left: 33%;\n    &:nth-child(even) {\n      background-color: #98c1d9;\n    }\n    &:nth-child(odd) {\n      background-color: #e0fbfc;\n    }\n    &::before {\n      content: \"${(p) => p.header}\";\n      position: absolute;\n      font-weight: 500;\n      font-size: 16px;\n      line-height: 33px;\n      top: 0px;\n      bottom: 0px;\n      left: 6px;\n      width: 30%;\n      white-space: nowrap;\n    }\n  }\n`\n\nexport const HeaderRow = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Homepage</th>\n        <th>Watchers</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n  )\n}\n\nexport const BodyRow = ({ index, repo }) => {\n  return (\n    <tr>\n      <TableData header={\"Name\"}>{repo.name}</TableData>\n      <TableData header={\"Homepage\"}>\n        {repo.homepage ? <a href={repo.homepage}>{repo.homepage}</a> : \"N/A\"}\n      </TableData>\n      <TableData header={\"Watcher\"}>{repo.watchers}</TableData>\n      <TableData header={\"Description\"}>{repo.description}</TableData>\n    </tr>\n  )\n}\n\n// - Loading screen - //\n\nconst H1 = styled.h1`\n  color: #ee6c4d;\n`\n\nexport const Loading = ({ loaded }) => {\n  const [numDots, setNumDots] = useState(0)\n  useEffect(() => {\n    let id = setInterval(() => setNumDots((numDots + 1) % 4), 500)\n    if (loaded) return () => clearInterval(id)\n    return () => clearInterval(id)\n  }, [loaded, numDots])\n  return <H1>Loading{\".\".repeat(numDots)}</H1>\n}\n","import styled from \"styled-components\"\nimport React from \"react\"\n\nconst buttonSize = \"40px\"\nconst Button = styled.button`\n  border: none;\n  cursor: pointer;\n  background: transparent;\n  color: #ee6c4d;\n  font-weight: 500;\n  font-size: 18px;\n  padding: 5px 10px;\n  min-height: ${buttonSize};\n  min-width: ${buttonSize};\n  border-radius: ${buttonSize};\n  position: relative;\n  &:hover {\n    ::before {\n      border-radius: ${buttonSize};\n      content: \"\";\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: white;\n      opacity: 0.1;\n    }\n  }\n`\nconst ButtonContainer = styled.div`\n  display: flex;\n`\nconst Buttons = ({ curPage, totalPages, setPage }) => {\n  console.log(\"DEBUG - totalPages:\", totalPages)\n  const pagesArray = new Array(totalPages).fill(\"\")\n  return (\n    <ButtonContainer>\n      <Button onClick={() => setPage(\"-\")}>Prev</Button>\n      {pagesArray.map((e, index) => (\n        <Button key={\"button\" + index} onClick={() => setPage(index)}>\n          {index + 1}\n        </Button>\n      ))}\n      <Button onClick={() => setPage(\"+\")}>Next</Button>\n    </ButtonContainer>\n  )\n}\n\nexport default Buttons\n","import { useState } from \"react\"\n\nconst usePaginator = (initalState, totalPages) => {\n  const [page, setPage] = useState(initalState)\n\n  const changePage = (input) => {\n    if (input === \"-\" && page > 0) setPage(page - 1)\n    if (input === \"+\" && page < totalPages - 1) setPage(page + 1)\n    if (typeof input === \"number\" && !Number.isNaN(input)) setPage(input)\n  }\n  return [page, changePage]\n}\n\nexport default usePaginator\n","//tolkning i oppgaven: tabell tolker jeg spesifikt som html-elementet \"table\". I motsetning til Ã¥ feks bruke \"div\"\n\nimport React, { useState, useEffect, useMemo } from \"react\"\nimport { Table, HeaderRow, BodyRow, AppContainer, Loading } from \"./components\"\nimport Buttons from \"./Buttons\"\nimport usePaginator from \"./usePaginator\"\n\nfunction KnowitApp() {\n  const [rawResults, setRawResults] = useState([])\n  const [totalPages, setTotalPages] = useState(0)\n  const [page, setPage] = usePaginator(0, totalPages)\n\n  //call api once\n  useEffect(() => {\n    fetch(\n      \"https://api.github.com/search/repositories?q=language:javascript&sort=stars&order=desc&per_page=100\"\n    )\n      .then((data) => data.json())\n      .then((res) => {\n        setRawResults(res.items)\n        setTotalPages(Math.floor(res.items.length / 20))\n      })\n  }, [])\n\n  //memoized array with current page results\n  const pageResults = useMemo(() => {\n    return rawResults.slice(page * 20, (page + 1) * 20)\n  }, [rawResults, page])\n\n  return (\n    <AppContainer>\n      {!pageResults.length ? (\n        <Loading loaded={pageResults.length} />\n      ) : (\n        <>\n          <Buttons page setPage={setPage} totalPages={totalPages} />\n          <Table>\n            <HeaderRow />\n            <tbody>\n              {pageResults.map((repo, index) => (\n                <BodyRow key={index} index={index} repo={repo} />\n              ))}\n            </tbody>\n          </Table>\n          <Buttons page setPage={setPage} totalPages={totalPages} />\n        </>\n      )}\n    </AppContainer>\n  )\n}\n\nexport default KnowitApp\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport KnowitApp from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <KnowitApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}